############################## ipmortant ##############################

# 定義門檻 HSV

import cv2
import numpy as np

# color object tracking

# 膚色檢測

cap = cv2.VideoCapture(0)

if not cap.isOpened():
    print("無法打開攝像頭 ")
    
while True:
    ret, frame = cap.read()
    if not ret:
        print("Can't receive frame (stream end?). Exiting ...")
        break

    hsv = cv2.cvtColor(frame,cv2.COLOR_BGR2HSV)
    
    lower = np.array([0, 70, 70]) # 定義下界

    higher = np.array([20, 255, 255]) # 定義上界

    
    mask = cv2.inRange(hsv,lower,higher) # 建立遮罩

    res = cv2.bitwise_and(frame,frame,mask=mask) # 使用遮罩進行像素篩選
    
    cv2.imshow('frame', frame)
    cv2.imshow('mask', mask)
    cv2.imshow('res', res)
    if cv2.waitKey(1) == ord('q'):
        break
cap.release()
cv2.destroyAllWindows()
------------------------------------------------------------------------------------------------
# 定義門檻 YCRCB

cap = cv2.VideoCapture(0)

if not cap.isOpened():
    print("無法打開攝像頭 ")
    
while True:
    ret, frame = cap.read()
    if not ret:
        print("Can't receive frame (stream end?). Exiting ...")
        break

    ycrcb = cv2.cvtColor(frame,cv2.COLOR_BGR2YCR_CB)
    
    lower = np.array([ 0, 140, 77])

    higher = np.array([ 255, 173, 127])
    
    mask=cv2.inRange(ycrcb,lower,higher)

    res=cv2.bitwise_and(frame,frame,mask=mask)
    
    cv2.imshow('frame', frame)
    cv2.imshow('mask', mask)
    cv2.imshow('res', res)
    if cv2.waitKey(1) == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
------------------------------------------------------------------------------------------------

可以利用 混淆矩陣 來評估 門檻檢測 效果如何





